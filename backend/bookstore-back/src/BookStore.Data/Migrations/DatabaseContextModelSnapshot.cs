// <auto-generated />
using BookStore.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("BookStore.Business.Models.Assunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Cod_As");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Assunto", (string)null);
                });

            modelBuilder.Entity("BookStore.Business.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Cod_Au");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("BookStore.Business.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Codl");

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("Livro_Assunto", b =>
                {
                    b.Property<int>("Assunto_codAs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Livro_Codl")
                        .HasColumnType("INTEGER");

                    b.HasKey("Assunto_codAs", "Livro_Codl");

                    b.HasIndex("Livro_Codl");

                    b.ToTable("Livro_Assunto");
                });

            modelBuilder.Entity("Livro_Autor", b =>
                {
                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Livro_Codl")
                        .HasColumnType("INTEGER");

                    b.HasKey("Autor_CodAu", "Livro_Codl");

                    b.HasIndex("Livro_Codl");

                    b.ToTable("Livro_Autor");
                });

            modelBuilder.Entity("Livro_Assunto", b =>
                {
                    b.HasOne("BookStore.Business.Models.Assunto", null)
                        .WithMany()
                        .HasForeignKey("Assunto_codAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Business.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("Livro_Codl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Livro_Autor", b =>
                {
                    b.HasOne("BookStore.Business.Models.Autor", null)
                        .WithMany()
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Business.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("Livro_Codl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
